name: test if statement

on:
  # push:
  #   branches:
  #     - test-images-**
  workflow_run:
    workflows: [Trigger test images]
    types: [completed]

jobs:
  setup:
    runs-on: ubuntu-latest
    outputs:
      branch_ref: ${{ steps.variables.outputs.branch_ref }}
      pr_type: ${{ steps.variables.outputs.pr_type }}
      pr_number: ${{ steps.variables.outputs.pr_number }}
      commit_hash: ${{ steps.variables.outputs.commit_hash }}
    steps:
      - name: Download trigger information
        uses: dawidd6/action-download-artifact@v2
        with:
          github_token: ${{ secrets.GITHUB_TOKEN }}
          workflow: trigger-test-images.yml
          run_id: ${{ github.event.workflow_run.id }}
          name: trigger-information
          path: ./

      - name: Store variables
        id: variables
        run: |
          echo branch_ref=$(cat trigger-information.json | jq -r '.branch_ref') >> "$GITHUB_OUTPUT"
          echo pr_type=$(cat trigger-information.json | jq -r '.pr_type') >> "$GITHUB_OUTPUT"
          echo pr_number=$(cat trigger-information.json | jq -r '.pr_number') >> "$GITHUB_OUTPUT"
          echo commit_hash=$(cat trigger-information.json | jq -r '.commit_hash') >> "$GITHUB_OUTPUT"
  test:
    runs-on: ubuntu-latest
    steps:
    - name: test if logic
      if: ${{ github.event_name == 'pull_request' }}
      # run: |
      #   echo "it ran!"
      uses: "./.github/workflow_templates/comment-pr"
      with:
        token: ${{ secrets.GITHUB_TOKEN }}
        pr_number: ${{ needs.setup.outputs.pr_number }}
        message: |
          Test images available! ðŸ§ªðŸš€ To test operator with them, run
          ```
          operator-sdk run bundle \
          quay.io/pelorus/rc-pelorus-operator-bundle:vpr${{ needs.setup.outputs.pr_number }}-${{ needs.setup.outputs.commit_hash }} \
          --namespace test-pelorus-operator
          ```
          To clean up environment afterwards, run
          ```
          operator-sdk cleanup pelorus-operator --namespace test-pelorus-operator
          ```
