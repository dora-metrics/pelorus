---
apiVersion: apiregistration.k8s.io/v1beta1
kind: APIService
metadata:
  name: v1beta1.custom.metrics.k8s.io
spec:
  service:
    name: my-metrics-apiserver
    namespace: openshift-monitoring
  group: custom.metrics.k8s.io
  version: v1beta1
  insecureSkipTLSVerify: true
  groupPriorityMinimum: 100
  versionPriority: 100
---
kind: ServiceAccount
apiVersion: v1
metadata:
  name: my-metrics-apiserver
  namespace: openshift-monitoring
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  name: my-metrics-server-resources
rules:
- apiGroups:
  - custom.metrics.k8s.io
  resources: ["*"]
  verbs: ["*"]
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  name: my-metrics-resource-reader
rules:
- apiGroups:
  - ""
  resources:
  - namespaces
  - pods
  - services
  - nodes
  verbs:
  - get
  - list
  - watch
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  name: my-metrics:system:auth-delegator
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: system:auth-delegator
subjects:
- kind: ServiceAccount
  name: my-metrics-apiserver
  namespace: openshift-monitoring
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  name: my-metrics-resource-reader
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: my-metrics-resource-reader
subjects:
- kind: ServiceAccount
  name: my-metrics-apiserver
  namespace: openshift-monitoring
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  name: my-hpa-controller-custom-metrics
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: my-metrics-server-resources
subjects:
- kind: ServiceAccount
  name: horizontal-pod-autoscaler
  namespace: kube-system
---
apiVersion: rbac.authorization.k8s.io/v1
kind: RoleBinding
metadata:
  name: my-metrics-auth-reader
  namespace: kube-system
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: Role
  name: extension-apiserver-authentication-reader
subjects:
- kind: ServiceAccount
  name: my-metrics-apiserver
  namespace: openshift-monitoring
---
kind: Secret
apiVersion: v1
metadata:
  name: cm-adapter-serving-certs
  namespace: openshift-monitoring
data:
  serving.crt: >-
    LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSURlVENDQW1HZ0F3SUJBZ0lVUS93bXRGVmVncTI2MmFHdVlYbXlyU0kvU2E0d0RRWUpLb1pJaHZjTkFRRUwKQlFBd0RURUxNQWtHQTFVRUF3d0NZMkV3SGhjTk1Ua3dOREEwTWpBd09UQXdXaGNOTWpRd05EQXlNakF3T1RBdwpXakFqTVNFd0h3WURWUVFERXhoamRYTjBiMjB0YldWMGNtbGpjeTFoY0dselpYSjJaWEl3Z2dFaU1BMEdDU3FHClNJYjNEUUVCQVFVQUE0SUJEd0F3Z2dFS0FvSUJBUURmelFtYTlUUWVZdS9hMlhRRmhVM0UvOStTZWMxV2F0M28KdHlXYVQzbTlZc3N1dDgvNW4zK3M3cDNva2RTeE5xNnZkZkVZVGJUV3phenpBZlhEV2VYd3VMU2NXZzBISVJYUgowWTBhakVXV1hZdTFFZG01cVRhYmN0UmZpVmFnR2xoeEhyYXdkOHM0VzBJL1NSM2NwbUs0cnlJbUNlTmpLN2RxCjF1VTlZMGFCZlRtZXhYTGV3Sm5EcnBCWW9nUW5LK3JjNFR6MVVPRjVMU0xXdGNaYUdUQVN5b3JxVjV0WmI5SWwKRUNPekNwTFRXS0F6Tk9EejNmQVloM043NGdpUTRLTTRDQzErbnpLTEM2SGxBenRUbms1ak4ra2x5WE5NZE9BSgpzOXJaU2NmK3BCbit1bXFoYm92bU1TYlJCTWg2ZTBIYmlVSkFPM1IydmFIZWxEN05QdUYxQWdNQkFBR2pnYm93CmdiY3dEZ1lEVlIwUEFRSC9CQVFEQWdXZ01Bd0dBMVVkRXdFQi93UUNNQUF3SFFZRFZSME9CQllFRkhtOEFLMUsKaTVnYnBDKzl0OUk3TG9jN3Y5M2VNQjhHQTFVZEl3UVlNQmFBRkJVSkZDMFlTbUhhRGVEQjBEcHE5L3VKd1ZpdwpNRmNHQTFVZEVRUlFNRTZDSTJOMWMzUnZiUzF0WlhSeWFXTnpMV0Z3YVhObGNuWmxjaTV0YjI1cGRHOXlhVzVuCmdpZGpkWE4wYjIwdGJXVjBjbWxqY3kxaGNHbHpaWEoyWlhJdWJXOXVhWFJ2Y21sdVp5NXpkbU13RFFZSktvWkkKaHZjTkFRRUxCUUFEZ2dFQkFDcmViVklSNkFoT0lId1dKTmZjZk5PVkFidlF2UHRqdjd5UVk4eXJGcTlQNDF4Qwp2ejZkZ3I3YnRXK2ZiMDZaVWhZTnZGdSt4RXAyM1NOcWlHUy80U2JaTnhOODZsMkFHT2trT0JhMUs5aUF5WEZlCmNKNGNJdjB2cXBheVNtNUYxaTY2MHlVcko0endFbzJIQXNwTDNCNmtvblUwN2dKNjdxaGlabEdVM044M2VBRGcKdkFjaGFWYzhiN3d5RExYT20yZDNlQ29YWnM2ZHJZUmljTU9sRnpYZURBZ0pXTTBmR3Q4dTBMUnUyOGxwcHBEQQord1NsMmQ4SWRzMVdob29WUFFaVDVISGl3K0VDSTVtQlU1dWdhczZNSW9RN3prMlplZXZZa2k2dVNaWnZjTFVYClhjV05DdS9meUhiU2ZzeDYrU0pkZForYitBWHp4QU5pQzNVTXM5cz0KLS0tLS1FTkQgQ0VSVElGSUNBVEUtLS0tLQo=
  serving.key: >-
    LS0tLS1CRUdJTiBSU0EgUFJJVkFURSBLRVktLS0tLQpNSUlFcFFJQkFBS0NBUUVBMzgwSm12VTBIbUx2MnRsMEJZVk54UC9ma25uTlZtcmQ2TGNsbWs5NXZXTExMcmZQCitaOS9yTzZkNkpIVXNUYXVyM1h4R0UyMDFzMnM4d0gxdzFubDhMaTBuRm9OQnlFVjBkR05Hb3hGbGwyTHRSSFoKdWFrMm0zTFVYNGxXb0JwWWNSNjJzSGZMT0Z0Q1Awa2QzS1ppdUs4aUpnbmpZeXUzYXRibFBXTkdnWDA1bnNWeQozc0NadzY2UVdLSUVKeXZxM09FODlWRGhlUzBpMXJYR1doa3dFc3FLNmxlYldXL1NKUkFqc3dxUzAxaWdNelRnCjg5M3dHSWR6ZStJSWtPQ2pPQWd0ZnA4eWl3dWg1UU03VTU1T1l6ZnBKY2x6VEhUZ0NiUGEyVW5IL3FRWi9ycHEKb1c2TDVqRW0wUVRJZW50QjI0bENRRHQwZHIyaDNwUSt6VDdoZFFJREFRQUJBb0lCQVFEZVlINEsyMXJPVnNDKwpWUlJUNkFFK25vRW9xcDYrSDdJZ2F0dVNXU1krYU13N3Y2bUlBRlI5SVIwRzJ1RGN0ZGtkdjdPdzBvVythdUJQCkZzTjlPUGFpR3VaYjlaNjhWc08zbU9EOFlDVkZJKzZPSFE2YXpPalZ6V1A1Q2g1cE44UnBvbnNsSGVOd1BEMjMKWkkrbmtDeklGajE0VHBzREQ0MVJPL2JNNkxoR01LdzMzcXhNTXAwQTR2YVJsNWVDTnpaMzcyenpVOXFHMjc4egpmcERzV1lndCtsMW5UeXRUemdvVVBqN0tidUFqNm1yQkppZXpjb0pDdFIrVEE5VzIwUWxKeVk2VGNMa3FyV010CjBtZFZWVDg0VTRmM2lkTG9TQmxvWkdLWVMzWW51QkoxOVoxcnJkck5oTUVkTkxYb1ZsOGh6Myt0WWgyZmZtQnEKRzd2MUxqU0JBb0dCQVBLQlZDL2QwQkhhOXl4ai9hVnlEKzlxRmsxQXNGeFR4MGJXR0dSVlVRRzYvbXl6eEFpSQpUUTlEUG5IbGlSbGRnT0hubUtrdXB2NkpFUDBJU1dXaDlsbmppRkdOOXhoZjRDS2Z1ZC9EMERVMWFJb1BpbEZYCnF6eFdTN1ZGbktlRTFtMUFheVdCdWJXTll4cTV6WHd0RE1yNTVvajVQMWJSZUpYb3lHVGd3dWJqQW9HQkFPeEIKUUkreXNubmVacWxReS9YeERxMGtaYVk2ZVRkc1l2RXowdFJ6MGlvSlNmOWl6dUNNZWRKNDN0UWNsRTE3bG9XagordWpMUnBWRVJPT2MyRUdXRXl1cGR4VlE1VERVbUVJbXdpcTRzL290M0xSMTZNczF1Q1dWK29oM3NabEs4MCs1CkhzTHEwNkhvTjRqZ0I4di81QzYwS2pQeGIwM1I4YVNGT01UWlVxM0hBb0dCQUtYNnp0eFVQVzE3S1dKQXJnTG4KSnZEKzgzUzhxZmtIZm9XRlUveVlTSEdld3pVemRTRkI2VHhoRWdSeXpudUYvQWlpczJKWWhBUURYSlZUYnFrWgpTYndNZCtrWitkMjlBWE94VDA5UWZ0bHNUTGp5R2dIQ3Qzajh0NlRDbUk0djVYT3hlNlNZUGJ0OW9pOVFyTXdwCktYQmp5dDVGZW95NW9vYzRaTEJuQmY5eEFvR0JBS0xrTXFGaE1oRTR1RXZSTzI5dEx4Tk4zeEFIalFBYnFQUnAKS05uMnFWYjJaS0RDL2FSdzlxV1pWUG1tWXRJeGZnelNqUExwQk5keDVKV1MxTUFUdTFBRlhlZkNpT05zRVRhNwpCbkR5UEpVbi9kNG0xY1VXV3NyL1oyZWtMejFrSWZJN3p1dlJnTzFHOE5OY3M4T0J3VkE2UkViZ0ZqL3ZtczQyClZIZlU1MTZOQW9HQVk3dFN2anFLL0xoUFV0dno5SU1OU1dSbGUySTJ6a2ZXU29xM0FtcEJuYTkxbUV3OHVmVXYKNS9lWVZ0NmVpOCtuMXZYd2pQMzI2dXh1ZVMyVkNabEx6SVREaTZmSDJjclV5YlhDWE9xKzUyemQ5TWRtZGdNMQpyZjJXam9vbU9XSEtrTVIrMlZTbkJhUnA0OXB4b2VWZUQ2R0RUeEdIdFFTQVQ2M04zeXJmTEdvPQotLS0tLUVORCBSU0EgUFJJVkFURSBLRVktLS0tLQo=
---
apiVersion: v1
kind: ConfigMap
metadata:
  name: myadapfig
  namespace: openshift-monitoring
data:
  config.yaml: |
    rules:
    - seriesQuery: '{__name__=~"^container_.*",container_name!="POD",namespace!="",pod_name!=""}'
      seriesFilters: []
      resources:
        overrides:
          namespace:
            resource: namespace
          pod_name:
            resource: pod
      name:
        matches: ^container_(.*)_seconds_total$
        as: ""
      metricsQuery: sum(rate(<<.Series>>{<<.LabelMatchers>>,container_name!="POD"}[1m])) by (<<.GroupBy>>)
    - seriesQuery: '{__name__=~"^container_.*",container_name!="POD",namespace!="",pod_name!=""}'
      seriesFilters:
      - isNot: ^container_.*_seconds_total$
      resources:
        overrides:
          namespace:
            resource: namespace
          pod_name:
            resource: pod
      name:
        matches: ^container_(.*)_total$
        as: ""
      metricsQuery: sum(rate(<<.Series>>{<<.LabelMatchers>>,container_name!="POD"}[1m])) by (<<.GroupBy>>)
    - seriesQuery: '{__name__=~"^container_.*",container_name!="POD",namespace!="",pod_name!=""}'
      seriesFilters:
      - isNot: ^container_.*_total$
      resources:
        overrides:
          namespace:
            resource: namespace
          pod_name:
            resource: pod
      name:
        matches: ^container_(.*)$
        as: ""
      metricsQuery: sum(<<.Series>>{<<.LabelMatchers>>,container_name!="POD"}) by (<<.GroupBy>>)
    - seriesQuery: '{namespace!="",__name__!~"^container_.*"}'
      seriesFilters:
      - isNot: .*_total$
      resources:
        template: <<.Resource>>
      name:
        matches: ""
        as: ""
      metricsQuery: sum(<<.Series>>{<<.LabelMatchers>>}) by (<<.GroupBy>>)
    - seriesQuery: '{namespace!="",__name__!~"^container_.*"}'
      seriesFilters:
      - isNot: .*_seconds_total
      resources:
        template: <<.Resource>>
      name:
        matches: ^(.*)_total$
        as: ""
      metricsQuery: sum(rate(<<.Series>>{<<.LabelMatchers>>}[1m])) by (<<.GroupBy>>)
    - seriesQuery: '{namespace!="",__name__!~"^container_.*"}'
      seriesFilters: []
      resources:
        template: <<.Resource>>
      name:
        matches: ^(.*)_seconds_total$
        as: ""
      metricsQuery: sum(rate(<<.Series>>{<<.LabelMatchers>>}[1m])) by (<<.GroupBy>>)
    resourceRules:
      cpu:
        containerQuery: sum(rate(container_cpu_usage_seconds_total{<<.LabelMatchers>>}[1m])) by (<<.GroupBy>>)
        nodeQuery: sum(rate(container_cpu_usage_seconds_total{<<.LabelMatchers>>, id='/'}[1m])) by (<<.GroupBy>>)
        resources:
          overrides:
            instance:
              resource: node
            namespace:
              resource: namespace
            pod_name:
              resource: pod
        containerLabel: container_name
      memory:
        containerQuery: sum(container_memory_working_set_bytes{<<.LabelMatchers>>}) by (<<.GroupBy>>)
        nodeQuery: sum(container_memory_working_set_bytes{<<.LabelMatchers>>,id='/'}) by (<<.GroupBy>>)
        resources:
          overrides:
            instance:
              resource: node
            namespace:
              resource: namespace
            pod_name:
              resource: pod
        containerLabel: container_name
      window: 1m
---
apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    app: custom-metrics-apiserver
  name: custom-metrics-apiserver
  namespace: openshift-monitoring
spec:
  replicas: 1
  selector:
    matchLabels:
      app: custom-metrics-apiserver
  template:
    metadata:
      labels:
        app: custom-metrics-apiserver
      name: custom-metrics-apiserver
    spec:
      serviceAccountName: my-metrics-apiserver
      containers:
      - name: custom-metrics-apiserver
        image: quay.io/gpte-devops-automation/k8s-prometheus-adapter:rc0
        args:
        - --secure-port=6443
        - --tls-cert-file=/var/run/serving-cert/serving.crt
        - --tls-private-key-file=/var/run/serving-cert/serving.key
        - --logtostderr=true
        - --prometheus-url=http://prometheus-operated.openshift-monitoring.svc:9090/
        - --metrics-relist-interval=1m
        - --v=10
        - --config=/etc/adapter/config.yaml
        ports:
        - containerPort: 6443
        volumeMounts:
        - mountPath: /var/run/serving-cert
          name: volume-serving-cert
          readOnly: true
        - mountPath: /etc/adapter/
          name: config
          readOnly: true
        - mountPath: /tmp
          name: tmp-vol
      volumes:
      - name: volume-serving-cert
        secret:
          secretName: cm-adapter-serving-certs
      - name: config
        configMap:
          name: myadapfig
      - name: tmp-vol
        emptyDir: {}
---
apiVersion: v1
kind: Service
metadata:
  name: my-metrics-apiserver
  namespace: openshift-monitoring
spec:
  ports:
  - port: 443
    targetPort: 6443
  selector:
    app: custom-metrics-apiserver
