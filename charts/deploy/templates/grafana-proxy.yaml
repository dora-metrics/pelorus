---
apiVersion: extensions/v1beta1
kind: Deployment
metadata: 
  name: grafana-proxy
spec:
  replicas: 1
  selector:
    matchLabels:
      app: grafana-proxy
  template:
    metadata:
      labels:
        app: grafana-proxy
    spec:
      serviceAccountName: grafana-proxy
      volumes:
        - name: secret-grafana-proxy-tls
          secret:
            secretName: grafana-proxy-tls
      containers:
      - name: grafana-proxy
        args:
        - -provider=openshift
        - -https-address=:3000
        - -http-address=
        - -email-domain=*
        - -upstream=http://grafana-service:3000
        - '-openshift-sar={"resource": "namespaces", "verb": "get"}'
        - '-openshift-delegate-urls={"/": {"resource": "namespaces", "verb": "get"}}'
        - -tls-cert=/etc/tls/private/tls.crt
        - -tls-key=/etc/tls/private/tls.key
        - -client-secret-file=/var/run/secrets/kubernetes.io/serviceaccount/token
        #- -cookie-secret-file=/etc/proxy/secrets/session_secret
        - -cookie-secret=bacon
        - -openshift-service-account=grafana-proxy
        - -openshift-ca=/etc/pki/tls/cert.pem
        - -openshift-ca=/var/run/secrets/kubernetes.io/serviceaccount/ca.crt
        #- -skip-auth-regex=^/metrics
        image: registry.redhat.io/openshift3/oauth-proxy:v3.11
        imagePullPolicy: IfNotPresent
        ports:
        - containerPort: 3000
          name: https
          protocol: TCP
        resources: {}
        terminationMessagePath: /dev/termination-log
        terminationMessagePolicy: File
        volumeMounts:
        - mountPath: /etc/tls/private
          name: secret-grafana-proxy-tls
        # - mountPath: /etc/proxy/secrets
        #   name: secret-grafana-proxy
