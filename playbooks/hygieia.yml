---

- import_playbook: "{{ playbook_dir }}/../dependencies/openshift-applier/playbooks/openshift-cluster-seed.yml"

- hosts: localhost
  connection: local
  vars_files:
    - ../vars/mdt.yml
  tasks:
    - name: Get Hygieia hostname
      command: >
        oc get routes -n {{ k8s_namespace }} ui-route -o=json
      register: hygieia_route_result
    - name: Set Facts
      set_fact:
        hygieia_host: "{{ (hygieia_route_result.stdout | from_json)['spec']['tls'] is defined | ternary('https','http')  }}://{{ (hygieia_route_result.stdout | from_json).spec.host }}"
    - name: Verify Hygieia Route Active
      uri:
        url: "{{ hygieia_host }}"
      register: hygieia_route_active
      until: hygieia_route_active.status == 200
      delay: 10
      retries: 120
    - name: Login
      uri:
        url: "{{ hygieia_host }}/api/login"
        body_format: form-urlencoded
        method: POST
        return_content: true
        body:
          username: "{{ hygieia_user }}"
          password: "{{ hygieia_password }}"
        headers:
          Content-Type: "application/x-www-form-urlencoded"
        status_code:
          - 200
          - 401
      until: login_result.status == 200 or login_result.status == 401
      delay: 10
      retries: 120
      register: login_result
    - name: Set Auth Token
      set_fact:
        hygieia_auth_token: "{{ login_result['x_authentication_token'] }}"
      when: login_result.status == 200
    - name: Create User
      block:
        - name: Create Admin User
          uri:
            url: "{{ hygieia_host }}/api/registerUser"
            body_format: json
            method: POST
            return_content: true
            body:
              username: "{{ hygieia_user }}"
              password: "{{ hygieia_password }}"
            headers:
              Content-Type: "application/json"
            status_code:
              - 200
          until: hygieia_create_user_result.status == 200
          delay: 5
          retries: 5
          register: hygieia_create_user_result
        - name: Set Auth Token (Create User Path)
          set_fact:
            hygieia_auth_token: "{{ hygieia_create_user_result['x_authentication_token'] }}"
      when: login_result.status != 200
    - name: Get Tokens
      uri:
        url: "{{ hygieia_host }}/api/admin/apitokens"
        body_format: json
        method: GET
        return_content: true
        headers:
          Authorization: "Bearer {{ hygieia_auth_token }}"
          Content-Length: 0
        status_code:
          - 200
      until: hygieia_api_tokens_result.status == 200
      delay: 5
      retries: 5
      register: hygieia_api_tokens_result
    - name: Admin API Token
      block:
        - name: Create Admin API Token
          uri:
            url: "{{ hygieia_host }}/api/admin/createToken"
            body_format: json
            method: POST
            return_content: true
            body:
              apiUser: "{{ hygieia_api_token_name }}"
              expirationDt: "{{ (((ansible_date_time.epoch|int)*1000) + (1000*60*60*24*hygieia_expiration_date_days)) }}"
            headers:
              Content-Type: "application/json"
              Authorization: "Bearer {{ hygieia_auth_token }}"
            status_code:
              - 200
          until: hygieia_api_create_token_result.status == 200
          delay: 5
          retries: 5
          register: hygieia_api_create_token_result
        - name: Set API Token (Create API)
          set_fact:
            hygieia_api_token: "{{ hygieia_api_create_token_result.content | replace('\"', '') }}"
      when: hygieia_api_tokens_result.content | from_json | selectattr('apiUser','equalto',hygieia_api_token_name)|list|length == 0
    - name: Set API Token
      set_fact:
        hygieia_api_token: "{{ (hygieia_api_tokens_result.content | from_json | selectattr('apiUser','equalto',hygieia_api_token_name)|list|first).id }}"
      when: hygieia_api_tokens_result.content | from_json | selectattr('apiUser','equalto',hygieia_api_token_name)|list|length > 0
    - name: Create Temporary Directory
      file:
        state: directory
        path: "{{ playbook_dir }}/../{{ temp_directory_name }}"
    - name: Populate API File for later reference
      copy:
        dest: "{{ playbook_dir }}/../{{ temp_directory_name }}/{{ hygieia_token_file }}"
        content: "{{ hygieia_api_token }}"
